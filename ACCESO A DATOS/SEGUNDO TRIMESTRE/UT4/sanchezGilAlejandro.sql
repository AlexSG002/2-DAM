SET SERVEROUTPUT ON

--Ejercicio 1
CREATE OR REPLACE TYPE TIPO_RESUMEN AS OBJECT (
    CLASE VARCHAR2(10),
    PASAJEROS NUMBER(4),
    SUMAPVP FLOAT
);

--Ejercicio 2
CREATE OR REPLACE TYPE VARRAY_RESUMEN AS VARRAY(3) OF TIPO_RESUMEN;

--Ejercicio 3
CREATE OR REPLACE TYPE TIPO_VUELO1 AS OBJECT (
    IDENTIFICADOR VARCHAR2(10),
    AEROPUERTO_ORIGEN VARCHAR2(10),
    AEROPUERTO_DESTINO VARCHAR2(10),
    TIPO_VUELO VARCHAR2(15),
    FECHA_VUELO DATE,
    RESUMEN VARRAY_RESUMEN,
    
    MEMBER FUNCTION NUMERO_PASAJEROS RETURN NUMBER,
    MEMBER FUNCTION PVP_TOTAL RETURN FLOAT,
    MEMBER FUNCTION PASAJEROS_CLASE(CLASE_BUSCADA VARCHAR2) RETURN NUMBER
) NOT FINAL;

CREATE OR REPLACE TYPE BODY TIPO_VUELO1 AS
    MEMBER FUNCTION NUMERO_PASAJEROS RETURN NUMBER IS
        TOTAL_PASAJEROS NUMBER := 0;
    BEGIN
        FOR i IN 1..RESUMEN.COUNT LOOP
            TOTAL_PASAJEROS := TOTAL_PASAJEROS + RESUMEN(i).PASAJEROS;
        END LOOP;
        RETURN TOTAL_PASAJEROS;
    END NUMERO_PASAJEROS;
    
    MEMBER FUNCTION PVP_TOTAL RETURN FLOAT IS
        TOTAL_PVP FLOAT := 0;
    BEGIN
        FOR i IN 1..RESUMEN.COUNT LOOP
            TOTAL_PVP := TOTAL_PVP + RESUMEN(i).SUMAPVP;
        END LOOP;
        RETURN TOTAL_PVP;
    END PVP_TOTAL;
    
    MEMBER FUNCTION PASAJEROS_CLASE(CLASE_BUSCADA VARCHAR2) RETURN NUMBER IS
        PASAJEROS_EN_CLASE NUMBER := 0;
    BEGIN
        FOR i IN 1..RESUMEN.COUNT LOOP
            IF RESUMEN(i).CLASE = CLASE_BUSCADA THEN
                PASAJEROS_EN_CLASE := RESUMEN(i).PASAJEROS;
                EXIT;
            END IF;
        END LOOP;
        RETURN PASAJEROS_EN_CLASE;
    END PASAJEROS_CLASE;
END;

--Ejercicio 4
CREATE TABLE TABLA_VUELO1 OF TIPO_VUELO1 (
    PRIMARY KEY (IDENTIFICADOR)
);

--Ejercicio 5
INSERT INTO TABLA_VUELO1
SELECT 
    VUELO.IDENTIFICADOR,
    VUELO.AEROPUERTO_ORIGEN,
    VUELO.AEROPUERTO_DESTINO,
    VUELO.TIPO_VUELO,
    VUELO.FECHA_VUELO,
    VARRAY_RESUMEN(
        TIPO_RESUMEN('PRIMERA', COUNT(CASE WHEN CLASE = 'PRIMERA' THEN 1 END), SUM(CASE WHEN CLASE = 'PRIMERA' THEN PVP END)),
        TIPO_RESUMEN('TURISTA', COUNT(CASE WHEN CLASE = 'TURISTA' THEN 1 END), SUM(CASE WHEN CLASE = 'TURISTA' THEN PVP END)),
        TIPO_RESUMEN('BUSINESS', COUNT(CASE WHEN CLASE = 'BUSINESS' THEN 1 END), SUM(CASE WHEN CLASE = 'BUSINESS' THEN PVP END))
    )
FROM 
    VUELOS.VUELO VUELO
    LEFT JOIN VUELOS.PASAJE PASAJE ON VUELO.IDENTIFICADOR = PASAJE.IDENTIFICADOR
GROUP BY 
    VUELO.IDENTIFICADOR, VUELO.AEROPUERTO_ORIGEN, VUELO.AEROPUERTO_DESTINO, VUELO.TIPO_VUELO, VUELO.FECHA_VUELO;

--Ejercicio 6
--a)
SELECT 
    IDENTIFICADOR,
    T.NUMERO_PASAJEROS() AS NUMERO_PASAJEROS,
    T.PVP_TOTAL() AS SUMA_TOTAL_PVP
FROM TABLA_VUELO1 T;

--b)
SELECT 
    IDENTIFICADOR,
    T.PASAJEROS_CLASE('TURISTA') AS PASAJEROS_TURISTA
FROM TABLA_VUELO1 T;

--Ejercicio 7
CREATE OR REPLACE TYPE TIPO_PASAJERO AS OBJECT (
    COD NUMBER,
    NOMBRE VARCHAR2(20),
    TUF VARCHAR2(20),
    DIRECCION VARCHAR2(40),
    PAIS VARCHAR2(20)
);

CREATE OR REPLACE TYPE TIPO_PASAJE AS OBJECT (
    PASAJERO_COD REF TIPO_PASAJERO,
    NUMASIENTO NUMBER,
    CLASE VARCHAR2(10),
    PVP FLOAT
);

CREATE OR REPLACE TYPE TABLA_PASAJES AS TABLE OF TIPO_PASAJE;

DROP TYPE BODY TIPO_VUELO;

DROP TYPE TIPO_VUELO;

CREATE OR REPLACE TYPE TIPO_VUELO AS OBJECT (
    IDENTIFICADOR       VARCHAR2(10),
    AEROPUERTO_ORIGEN   VARCHAR2(10),
    AEROPUERTO_DESTINO  VARCHAR2(10),
    TIPO_DE_VUELO       VARCHAR2(15),
    FECHA_VUELO         DATE,
    PASAJES             TABLA_PASAJES

);





--Ejercicio 8
ALTER TYPE TIPO_VUELO ADD MEMBER FUNCTION PASAJERO_POR_ASIENTO(
    NUM_ASIENTO NUMBER
) RETURN TIPO_PASAJERO;
/

CREATE OR REPLACE TYPE BODY TIPO_VUELO AS
    MEMBER FUNCTION PASAJERO_POR_ASIENTO(NUM_ASIENTO NUMBER) RETURN TIPO_PASAJERO IS
        obj TIPO_PASAJERO;
    BEGIN
        FOR i IN 1..SELF.PASAJES.COUNT LOOP
            IF SELF.PASAJES(i).NUMASIENTO = NUM_ASIENTO THEN
                SELECT DEREF(SELF.PASAJES(i).PASAJERO_COD)
                  INTO obj
                  FROM DUAL;
                RETURN obj;
            END IF;
        END LOOP;
        RETURN NULL;
    END PASAJERO_POR_ASIENTO;
END;
/



--Ejercicio 9
ALTER TYPE TIPO_VUELO ADD MEMBER FUNCTION PASAJEROS_POR_CLASE(CLASE_BUSCADA VARCHAR2) RETURN TABLA_PASAJES;

CREATE OR REPLACE TYPE BODY TIPO_VUELO AS

    MEMBER FUNCTION PASAJERO_POR_ASIENTO(NUM_ASIENTO NUMBER) RETURN TIPO_PASAJERO IS
        obj TIPO_PASAJERO;
    BEGIN
        FOR i IN 1..SELF.PASAJES.COUNT LOOP
            IF SELF.PASAJES(i).NUMASIENTO = NUM_ASIENTO THEN
                SELECT DEREF(SELF.PASAJES(i).PASAJERO_COD)
                  INTO obj
                  FROM DUAL;
                RETURN obj;
            END IF;
        END LOOP;
        RETURN NULL;
    END PASAJERO_POR_ASIENTO;

    MEMBER FUNCTION PASAJEROS_POR_CLASE(CLASE_BUSCADA VARCHAR2) RETURN TABLA_PASAJES IS
        P_TABLA TABLA_PASAJES := TABLA_PASAJES();
    BEGIN
        FOR i IN 1..SELF.PASAJES.COUNT LOOP
            IF SELF.PASAJES(i).CLASE = CLASE_BUSCADA THEN
                P_TABLA.EXTEND;
                P_TABLA(P_TABLA.COUNT) := SELF.PASAJES(i);
            END IF;
        END LOOP;
        RETURN P_TABLA;
    END PASAJEROS_POR_CLASE;

END;
/


--Ejercicio 10
DROP TABLE TABLA_VUELO_TIPO CASCADE CONSTRAINTS;

CREATE TABLE TABLA_VUELO_TIPO OF TIPO_VUELO (
    PRIMARY KEY (IDENTIFICADOR)
)
NESTED TABLE PASAJES STORE AS NESTED_TABLA_PASAJES;

DROP TABLE VUELOS.PASAJERO CASCADE CONSTRAINTS;
CREATE TABLE VUELOS.PASAJERO OF TIPO_PASAJERO (
    PRIMARY KEY (COD)
);

INSERT INTO VUELOS.PASAJERO (COD, NOMBRE, TUF, DIRECCION, PAIS)
VALUES (4, 'MARIA JIMENEZ', '123456789', 'Calle Falsa 123', 'ESPANA');

INSERT INTO VUELOS.PASAJERO (COD, NOMBRE, TUF, DIRECCION, PAIS)
VALUES (5, 'ROSARIO FORES', '987654321', 'Avenida Siempre Viva 742', 'ESPANA');

INSERT INTO VUELOS.PASAJERO (COD, NOMBRE, TUF, DIRECCION, PAIS)
VALUES (6, 'ALICIA RAMOS', '555555555', 'Plaza Mayor 1', 'ESPANA');


COMMIT;

INSERT INTO TABLA_VUELO_TIPO
SELECT 
    v.IDENTIFICADOR,
    v.AEROPUERTO_ORIGEN,
    v.AEROPUERTO_DESTINO,
    v.TIPO_VUELO,
    v.FECHA_VUELO,
    CAST(
        MULTISET(
            SELECT REF(pasj),
                   pas.NUMASIENTO,
                   pas.CLASE,
                   pas.PVP
            FROM VUELOS.PASAJE pas
            JOIN VUELOS.PASAJERO pasj ON pas.PASAJERO_COD = pasj.COD
            WHERE pas.IDENTIFICADOR = v.IDENTIFICADOR
        ) AS TABLA_PASAJES
    )
FROM VUELOS.VUELO v;






--Ejercicio 11
SELECT 
    T.IDENTIFICADOR,
    CASE 
        WHEN T.PASAJERO_POR_ASIENTO(30) IS NULL THEN 'NO HAY'
        ELSE T.PASAJERO_POR_ASIENTO(30).NOMBRE
    END AS NOMBRE_PASAJERO
FROM TABLA_VUELO_TIPO T;


--Ejercicio 12
CREATE OR REPLACE PROCEDURE LISTADO_PASAJEROS(
    P_IDENTIFICADOR IN VARCHAR2,
    P_CLASE IN VARCHAR2
) AS
    PASAJEROS_TAB TABLA_PASAJES;
    l_pasajero TIPO_PASAJERO;
BEGIN
    SELECT T.PASAJEROS_POR_CLASE(P_CLASE)
      INTO PASAJEROS_TAB
      FROM TABLA_VUELO_TIPO T
      WHERE T.IDENTIFICADOR = P_IDENTIFICADOR;
    
    IF PASAJEROS_TAB.COUNT = 0 THEN
        DBMS_OUTPUT.PUT_LINE('IDENTIFICADOR: ' || P_IDENTIFICADOR);
        DBMS_OUTPUT.PUT_LINE('****** CLASE: ' || P_CLASE);
        DBMS_OUTPUT.PUT_LINE('NO HAY PERSONAS');
    ELSE
        DBMS_OUTPUT.PUT_LINE('IDENTIFICADOR: ' || P_IDENTIFICADOR);
        DBMS_OUTPUT.PUT_LINE('****** CLASE: ' || P_CLASE);
        FOR i IN 1..PASAJEROS_TAB.COUNT LOOP

            SELECT DEREF(PASAJEROS_TAB(i).PASAJERO_COD)
              INTO l_pasajero
              FROM DUAL;
              
            DBMS_OUTPUT.PUT_LINE(l_pasajero.NOMBRE);
        END LOOP;
    END IF;
END;

/
BEGIN
    LISTADO_PASAJEROS('IBE-762', 'TURISTA');
    LISTADO_PASAJEROS('BRU-1234', 'BUSINESS');
END;

