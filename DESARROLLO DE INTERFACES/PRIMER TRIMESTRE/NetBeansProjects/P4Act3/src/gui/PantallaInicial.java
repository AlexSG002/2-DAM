/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;
//Importamos la función color para cambiar el color del fondo de la interfaz.
import java.awt.Color;
//Importamos la función ArrayList, ya que la utilizaremos para almacenar las palabras.
import java.util.ArrayList;
//Importamos la función DefaultTableModel para establecer el modelo de la tabla que vamos a utilizar en la interfaz.
import javax.swing.table.DefaultTableModel;
//Importamos la función JOptionPane para indicarle al usuario errores en caso de que alguna entrada introducida no sea válida.
import javax.swing.JOptionPane;

/**
 *
 * @author Alejandro Sánchez Gil
 */
public class PantallaInicial extends javax.swing.JFrame {
    //Creamos una ArrayList de tipo string al que llamaremos palabras.
    private ArrayList<String> palabras = new ArrayList<String>();
    //Creamos un modelo de tipo DefaultTableModel para nuestra tabla.
    DefaultTableModel modelo = new DefaultTableModel();
    
    /**
     * Creates new form PantallaInicial
     */
    public PantallaInicial() {
        initComponents();
        //Cogemos el ContentPane del JFrame una vez más para cambiarle el color.
        getContentPane().setBackground(new java.awt.Color(159,213,209));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtInfo = new javax.swing.JLabel();
        txfCampo = new javax.swing.JTextField();
        btnIngresar = new javax.swing.JButton();
        btnMostrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtInfo.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        txtInfo.setText("Ingrese palabra:");

        txfCampo.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        txfCampo.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 153, 153)));
        txfCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfCampoActionPerformed(evt);
            }
        });

        btnIngresar.setBackground(new java.awt.Color(0, 153, 153));
        btnIngresar.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        btnMostrar.setBackground(new java.awt.Color(0, 153, 153));
        btnMostrar.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnMostrar.setText("Mostrar");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lista"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(153, 153, 153));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnIngresar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(btnMostrar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfCampo)))
                .addGap(77, 77, 77))
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIngresar)
                    .addComponent(btnMostrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txfCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfCampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfCampoActionPerformed

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        //Le indicamos al modelo que establezca los titulos de las columnas como un array de Strings, en el que simplemente pondremos uno, de nombre "Lista"
        //ya que solo se nos solicita una columna, esto lo hacemos con la función "setColumnIdentifiers()".
        modelo.setColumnIdentifiers(new String[] {"Lista"});
        //Creamos un String de nombre palabra y le damos el valor del textField "txfCampo" que será el que el usuario introduzca por pantalla.
        String palabra = txfCampo.getText();
        //Condición que comprueba si la variable "Palabra" esta vacía, esto lo comprobamos con la función "isEmpty()".
        if(palabra.isEmpty()){
            //En caso de que se cumpla la condición, lanzamos un mensaje en una ventana nueva utilizando la función "JOptionPane.showMessageDialog()", el argumento this
            //hace referencia a esta pantalla.
            JOptionPane.showMessageDialog(this, "La palabra que estás intentado introducir está vacía");
        //En caso contrario:
        }else
            //Comprueba si la palabra introducida contiene algún número, esto lo he realizado con la función "matches()" igualandola a una expresión regular que incluye
            //todos los caracteres numéricos.
            if(palabra.matches(".*\\d.*")){
                //Si se cumple envía un mensaje de la misma manera que el anterior.
                JOptionPane.showMessageDialog(this, "La palabra que estás intentado introducir contiene un número");
            //En caso contrario:
            }else
                //Comprueba si la palabra introducida es mayor de 10 caracteres.
                if(palabra.length()>10){
                    //Si se cumple, de nuevo, le lanza un mensaje al usuario.
                    JOptionPane.showMessageDialog(this, "La palabra que estás intentado introducir es más larga que 10 caracteres");
                //En caso contrario:
                }else{
                    //Añade la palabra introducida al ArrayList de palabras que habíamos creado antes.
                    palabras.add(palabra);
                    //Establece de nuevo el campo txfCampo en blanco, para introducir la siguiente palabra.
                    txfCampo.setText("");
                }
        
        
    }//GEN-LAST:event_btnIngresarActionPerformed
//Método que ejecutará las funciones establecidas en el al pulsar el botón "btnMostrar".
    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        //Condición que comprueba si el ArrayList "palabras" está vacío.
        if(palabras.isEmpty()){
            //Si se cumple le lanza un mensaje al usuario con la función "JOptionPane.showMessageDialog".
            JOptionPane.showMessageDialog(this, "No hay palabras que mostrar");
        //En caso contrario:
        }else{
            //Establece el contador de del modelo de nuestra tabla a 0 con la función "setRowCount()" para que no apareczcan filas por si el modelo las tuviese.
            modelo.setRowCount(0);
            //Establece como identificador de columnas la palabra "Lista", es decir pone de titulo de la columna esa palabra en el modelo de la tabla con la función
            //"setColumnIdentifiers" si tuviesemos más columnas podríamos escribir al lado de lista otras columnas a las que añadir datos, pero aquí solo tenemos una.
            modelo.setColumnIdentifiers(new String[]{"Lista"});
            //Bucle for que itera por cada "palabra", variable de tipo String que creamos, que haya dentro del Array "palabras".
            for (String palabra : palabras){
                //Por cada palabra dento del Array la añadimos a una nueva fila del modelo de nuestra tabla como objeto.
                modelo.addRow(new Object[]{palabra});
            }
            //Finalmente, establecemos el modelo a la tabla, de nombre "jTable1".
            jTable1.setModel(modelo);
        }
        
    }//GEN-LAST:event_btnMostrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaInicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txfCampo;
    private javax.swing.JLabel txtInfo;
    // End of variables declaration//GEN-END:variables
}
